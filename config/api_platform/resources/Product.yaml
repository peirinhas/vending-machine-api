App\Entity\Product:
  attributes:
    normalization_context:
      groups: ['product_read']
    filters:
      - app.product.search_filter
      - app.product.order_filter

  collectionOperations:
    get:
      method: 'GET'
      security: 'is_granted("PRODUCT_READ")'
      openapi_context:
        summary: Get the colletion of products
        description: End point to get all products

    post:
      method: 'POST'
      security: 'is_granted("PRODUCT_CREATE")'
      denormalization_context:
        groups: ['product_post']
      openapi_context:
        summary: Add product
        description: End point to add new product
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  machine:
                    type: string
                  name:
                    type: string
                  cost:
                    type: number
                    format: float
                  stock:
                    type: number


  itemOperations:
    get:
      method: 'GET'
      security: 'is_granted("PRODUCT_READ", object)'
      openapi_context:
        summary: Get product
        description: End point to get one product

    patch_product:
      method: 'PATCH'
      security: 'is_granted("PRODUCT_UPDATE", object)'
      denormalization_context:
        groups: ['product_patch']
      openapi_context:
        summary: Update product
        description: End point to update some or all attribute of product
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  cost:
                    type: number
                    format: float
                  stock:
                    type: number

    patch_stock:
      method: 'PATCH'
      path: '/products/buy/{id}'
      security: 'is_granted("PRODUCT_BUY", object)'
      denormalization_context:
        groups: ['product_buy']
      openapi_context:
        summary: Buy some product
        description: End point to buy some product
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string

    delete:
      method: 'DELETE'
      security: 'is_granted("PRODUCT_DELETE", object)'
      openapi_context:
        summary: Remove product
        description: End point to remove one product